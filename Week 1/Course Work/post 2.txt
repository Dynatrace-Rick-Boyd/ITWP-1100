I'm not a developer, but I work with a lot of them, and see a lot of projects come to fruition at major companies.  The web is now accessed more often by mobile devices than desktops/laptops so having mobile presentation for your audience is more important than ever--"mission critical" in a lot of the shops I visit.  The flexibility and dynamic nature of JavaScript makes it much easier to present your content in a way that fits a wide range of screen sizes, not only for web but for hybrid native apps as well.
Using JavaScript libraries like JQuery and frameworks like AngularJS to create dynamic menus and single-page applications means having the ability to fit more on smaller screens.  In addition to that, the classic idea of what's "above the fold" now translates to what's "on the screen" as users on the edge of mobile networks dealing with limited bandwidth need intelligently designed applications to retrieve and render content as-needed, and JavaScript can help with that, by implementing incremental rendering and responsive design (such as with EmberJS).  Best of all, once this effort is complete, you can use technologies like Cordova or PhoneGap to use your mobile web content to create hybrid native apps; no need to start over with Java and Swift implementations in order to get a more tangible presence on your users' devices.

More info:
Ember JS List-view How-to (incremental rendering): http://hackersome.com/p/samselikoff/list-view
Blog about how awesome PhoneGap is (porting mobile web applications to native apps): http://blog.mobiloitte.com/enterprise-mobile-app-development/
Ionic Framework (mobile implementation of the Angular framework): http://www.infoworld.com/article/2609530/development-environments/ionic-mobile-app-dev-framework-centers-on-touch--animation.html
